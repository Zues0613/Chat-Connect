generator client {
  provider = "prisma-client-py"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MessageRole {
  user
  assistant
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  googleId     String?   @unique
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  lastLogin    DateTime?
  name         String    // Added name field for user registration
  preferredModel String? @default("gemini") // User's preferred AI model
  sessions     Session[]
  chats        ChatSession[]
  servers      MCPServer[]
  apiKeys      APIKey[]
}

model Session {
  id           Int       @id @default(autoincrement())
  user         User      @relation(fields: [userId], references: [id])
  userId       Int
  jwtToken     String    @unique
  expiresAt    DateTime
  createdAt    DateTime  @default(now())
}

model ChatSession {
  id           Int       @id @default(autoincrement())
  user         User      @relation(fields: [userId], references: [id])
  userId       Int
  title        String?   @default("New Chat")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  messages     Message[]
}

model Message {
  id           Int         @id @default(autoincrement())
  chatSession  ChatSession @relation(fields: [chatSessionId], references: [id])
  chatSessionId Int
  content      String      @db.Text
  role         MessageRole
  createdAt    DateTime    @default(now())
}

model MCPServer {
  id           Int       @id @default(autoincrement())
  user         User      @relation(fields: [userId], references: [id])
  userId       Int
  name         String    @db.VarChar(100)
  description  String?   @db.VarChar(255)
  config       Json
  createdAt    DateTime  @default(now())
}

model APIKey {
  id           Int       @id @default(autoincrement())
  user         User      @relation(fields: [userId], references: [id])
  userId       Int
  name         String    @db.VarChar(100)
  provider     String    @db.VarChar(50)
  value        String    @db.Text // Store encrypted/hashed if possible
  createdAt    DateTime  @default(now())
}
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init